// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  username  String    @unique
  email     String    @unique
  password  String?
  fullName  String
  avatarUrl String?

  isActive  Boolean   @default(true)
  role      String    @default("user")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  posts     Post[]
  accounts  Account[]

  @@map("users")
}

model Account {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  userId            String   @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refreshToken      String?
  accessToken       String?
  expiresAt         Int?
  tokenType         String?
  scope             String?
  idToken           String?
  sessionState      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Post {
  id              String     @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  slug            String     @unique
  excerpt         String?
  content         String
  status          String
  postType        String
  authorId        String     @db.ObjectId
  thumbnail       String?
  author          User       @relation(fields: [authorId], references: [id])
  categoryId      String     @db.ObjectId
  category        Category   @relation(fields: [categoryId], references: [id])
  isFeatured      Boolean    @default(false)
  publishedAt     DateTime?
  scheduledAt     DateTime?
  metaTitle       String?
  metaDescription String?
  metaKeyword     String?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  @@map("posts")
}

model Category {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String    @unique
  slug        String    @unique
  description String?
  posts       Post[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("categories")
}

model Menu {
  id     String     @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  items  MenuItem[]

  @@map("menus")
}

model MenuItem {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  menuId    String      @db.ObjectId
  menu      Menu        @relation(fields: [menuId], references: [id])

  parentId  String?     @db.ObjectId
  parent    MenuItem?   @relation("SubMenuItems", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children  MenuItem[]  @relation("SubMenuItems")

  name       String
  url        String
  sortOrder  Int

  @@map("menu_items")
}
